@model BiteSpot.Models.Opinion
@{
    ViewData["Title"] = "Dejar Opinión";
}

<h2>@ViewData["Title"]</h2>
<h4>Producto: @ViewBag.ProductoNombre</h4>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()

    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <!-- Incluye el ID del producto -->
    <input type="hidden" asp-for="ProductoId" />

    <!-- Si el modelo requiere UsuarioId, inclúyelo también (aunque será sobreescrito en el controlador) -->
    <input type="hidden" asp-for="UsuarioId" />

    <div class="form-group">
        <label asp-for="Puntuacion" class="control-label"></label>
        <select asp-for="Puntuacion" class="form-control">
            @for (int i = 1; i <= 5; i++)
            {
                <option value="@i">@i</option>
            }
        </select>
        <span asp-validation-for="Puntuacion" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Comentario" class="control-label"></label>
        <textarea asp-for="Comentario" class="form-control"></textarea>
        <span asp-validation-for="Comentario" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-success">Enviar Opinión</button>
    <a asp-controller="Producto" asp-action="Details" asp-route-id="@Model.ProductoId" class="btn btn-secondary">Cancelar</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
